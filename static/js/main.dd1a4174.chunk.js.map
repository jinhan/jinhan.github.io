{"version":3,"sources":["components/About.tsx","components/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","circularPortrait","position","width","height","overflow","borderRadius","circularPortraitImg","objectFit","LinkButton","styled","Button","color","backgroundColor","textTransform","fontSize","display","alignItems","justifyContent","About","name","address","addressURL","email","description","photoPath","linkedIn","github","googleScholar","cv","Grid","container","spacing","Box","fontWeight","style","marginTop","item","direction","xs","Typography","whiteSpace","justifyItems","component","startIcon","className","onClick","window","open","size","teaserImg","backgroundPosition","figure","margin","padding","fnAuthors","authors","replace","ProjectItem","id","title","source","teaser","path","award","project","video","classes","src","maxHeight","dangerouslySetInnerHTML","__html","fontStyle","Chip","label","icon","Projects","props","projects","map","i","App","useState","data","setData","fetchData","a","fetch","resp","json","useEffect","Container","maxWidth","about","variant","align","updated","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.dd1a4174.chunk.js","sourcesContent":["import React from \"react\";\n// import css from '../index.css';\nimport {Grid, Box, Typography, Button} from \"@mui/material\";\nimport {styled, makeStyles} from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  circularPortrait: {\n    position: \"relative\",\n    width: \"15vw\",\n    height: \"15vw\",\n    overflow: \"hidden\",\n    borderRadius: \"50%\",\n  },\n  circularPortraitImg: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n}));\n\ntype AboutProps = {\n  email: string;\n  address: string;\n  addressURL: string;\n  name: string;\n  photoPath: string;\n  description: string;\n  linkedIn: string;\n  github: string;\n  googleScholar: string;\n  cv: string;\n};\n\nconst LinkButton = styled(Button)(({theme}) => ({\n  color: \"#000000\",\n  \"&:hover\": {\n    backgroundColor: \"#fed8b1\",\n  },\n  textTransform: \"none\",\n  fontSize: \"15px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  \"& .MuiButton-startIcon\": {\n    fontSize: \"2rem\", // Adjust the icon size as needed\n  },\n}));\n\nconst About: React.FC<AboutProps> = ({\n  name,\n  address,\n  addressURL,\n  email,\n  photoPath,\n  description,\n  linkedIn,\n  github,\n  googleScholar,\n  cv,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={3}>\n      <Box\n        fontWeight=\"fontWeightBold\"\n        fontSize=\"h4.fontSize\"\n        style={{marginTop: \"5px\"}}\n      >\n        Jinhan Choi\n      </Box>\n      <Grid item container direction=\"row\" alignItems=\"center\">\n        {/* <Grid item xs={2} style={{maxWidth: \"20vw\", maxHeight: \"20vw\"}}> */}\n        {/* <div\n            className={classes.circularPortrait}\n            style={{marginRight: \"10px\"}}\n          >\n            <img\n              alt=\"profile-img\"\n              src={photoPath}\n              className={classes.circularPortraitImg}\n            />\n          </div> */}\n        {/* <Box marginTop={3}>\n            <Box component=\"span\">\n              <LinkButton\n                onClick={() => window.open(addressURL, \"_blank\")}\n                startIcon={<i className=\"fa-solid fa-location-pin fa-2xl\"></i>}\n              >\n                {address}\n              </LinkButton>\n            </Box>\n          </Box> */}\n        {/* </Grid> */}\n        <Grid item xs>\n          <Typography style={{whiteSpace: \"pre-line\", marginTop: \"15px\"}}>\n            {description}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid item xs container justifyItems=\"center\" alignItems=\"center\">\n        <Box component=\"span\">\n          <LinkButton startIcon={<i className=\"fas fa-envelope fa-2x\"></i>}>\n            {email}\n          </LinkButton>\n        </Box>\n        {/* <Box component=\"span\">\n          <LinkButton\n            onClick={() => window.open(cv, \"_blank\")}\n            startIcon={<i className=\"fas fa-file-alt\"></i>}\n          >\n            CV \n          </LinkButton>\n        </Box> */}\n        <Box component=\"span\">\n          <LinkButton\n            onClick={() => window.open(linkedIn, \"_blank\")}\n            startIcon={<i className=\"fab fa-linkedin\"></i>}\n            size=\"large\"\n          >\n            {/* LinkedIn */}\n          </LinkButton>\n        </Box>\n        <Box component=\"span\">\n          <LinkButton\n            onClick={() => window.open(github, \"_blank\")}\n            startIcon={<i className=\"fab fa-github\"></i>}\n          >\n            {/* Github */}\n          </LinkButton>\n        </Box>\n        <Box component=\"span\">\n          <LinkButton\n            onClick={() => window.open(googleScholar, \"_blank\")}\n            startIcon={<i className=\"fas fa-graduation-cap\"></i>}\n          >\n            {/* Scholar */}\n          </LinkButton>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport {Grid, Box, Button, Chip} from \"@mui/material\";\nimport {makeStyles, styled} from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  teaserImg: {\n    position: \"absolute\",\n    // left: \"0\",\n    backgroundPosition: \"left\",\n    // \"-webkit-transform\": \"scale(1)\",\n    // transform: \"scale(1)\",\n    // \"-webkit-transition\": \".5s ease-in-out\",\n    // transition: \".5s ease-in-out\",\n    \"-webkit-transition\": \"all 2s\",\n    \"&:hover\": {\n      // left: \"-50vw\",\n      backgroundPosition: \"right\",\n    },\n  },\n  figure: {\n    position: \"relative\",\n    height: \"100%\",\n    width: \"auto\",\n    margin: 0,\n    padding: 0,\n    overflow: \"hidden\",\n  },\n}));\n\ntype IProjectItem = {\n  id: string;\n  title: string;\n  authors: string;\n  source: string;\n  teaser: string;\n  path: string;\n  award: string;\n  project: string;\n  video: string;\n};\n\ntype ProjectsProps = {\n  projects: Array<IProjectItem>;\n};\n\nconst LinkButton = styled(Button)(({theme}) => ({\n  color: \"#808080\",\n  \"&:hover\": {\n    backgroundColor: \"#fed8b1\",\n  },\n  textTransform: \"none\",\n  fontSize: \"15px\",\n}));\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item>\n        <Box fontWeight=\"fontWeightBold\" fontSize=\"h5.fontSize\">\n          Publications\n        </Box>\n      </Grid>\n      <Grid item container spacing={3}>\n        {props.projects &&\n          props.projects.map((project, i) => (\n            <ProjectItem key={project.id} {...project} />\n          ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst fnAuthors = (authors: string) => {\n  const newAuthors = authors.replace(\n    \"Jinhan Choi\",\n    \"<strong>Jinhan Choi</strong>\"\n  );\n\n  return '<Box component=\"div\">' + newAuthors + \"</Box>\";\n};\n\nconst ProjectItem: React.FC<IProjectItem> = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  path,\n  award,\n  project,\n  video,\n}) => {\n  const classes = useStyles();\n  // console.log(teaser);\n\n  return (\n    <Grid item container direction=\"row\" spacing={3}>\n      <Grid item xs={2} alignItems=\"left\">\n        <div className={classes.figure}>\n          {/* <div\n            // alt=\"publication-teaser\"\n            // src={teaser}\n            // width=\"100%\"\n            style={{\n              // backgroundImage: `url($(process.env.PUBLIC_URL + teaser))`,\n              // backgroundImage: `url($(\"../..\" + teaser)})`,\n              backgroundRepeat: \"no-repeat\",\n              maxHeight: \"110px\",\n            }}\n            className={classes.teaserImg}\n          ></div> */}\n          <img src={teaser} style={{width: \"100%\", maxHeight: \"110px\"}} />\n        </div>\n      </Grid>\n\n      <Grid\n        container\n        item\n        xs\n        alignItems=\"left\"\n        direction=\"column\"\n        spacing={0.5}\n      >\n        <Grid item xs>\n          <Box fontWeight=\"fontWeightBold\">{title}</Box>\n        </Grid>\n\n        <Grid item xs>\n          <div dangerouslySetInnerHTML={{__html: fnAuthors(authors)}} />\n        </Grid>\n\n        <Grid item xs>\n          <Box fontStyle=\"italic\">{source}</Box>\n        </Grid>\n\n        {award && (\n          <Grid item xs>\n            <Box>\n              <Chip\n                size=\"small\"\n                color=\"primary\"\n                label={award}\n                icon={<i className=\"fas fa-award\"></i>}\n                style={{color: \"white\", fontWeight: \"bold\"}}\n              />\n            </Box>\n          </Grid>\n        )}\n\n        <Grid item xs>\n          <LinkButton\n            size=\"small\"\n            onClick={() => window.open(path, \"_blank\")}\n            startIcon={<i className=\"fas fa-file-alt\"></i>}\n          >\n            paper\n          </LinkButton>\n          {project && (\n            <LinkButton\n              size=\"small\"\n              onClick={() => window.open(project, \"_blank\")}\n              startIcon={<i className=\"fas fa-globe\"></i>}\n            >\n              project\n            </LinkButton>\n          )}\n          {video && (\n            <LinkButton\n              size=\"small\"\n              onClick={() => window.open(video, \"_blank\")}\n              startIcon={<i className=\"fas fa-video\"></i>}\n            >\n              video\n            </LinkButton>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Projects;\n","import React, { useState, useEffect } from \"react\";\n// import './App.css';\nimport About from \"src/components/About\";\nimport Projects from \"src/components/Projects\";\n\nimport { Container, Grid, Typography } from \"@mui/material\";\n\ninterface DataObject {\n  [key: string]: any;\n}\n\nconst App = () => {\n  const [data, setData] = useState<DataObject>({});\n\n  const fetchData = async () => {\n    const resp = await fetch(\"assets/data.json\");\n    const data = await resp.json();\n    setData(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container spacing={5} direction=\"column\" marginTop={1}>\n        <Grid item xs>\n          <About {...data.about} />\n        </Grid>\n        <Grid item xs>\n          <Projects projects={data.projects} />\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"body1\" align=\"center\">\n            © Jinhan Choi | Last Updated: {data.updated}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  //https://material-ui.com/customization/palette/\n  palette: {\n    primary: {\n      main: \"#FF8C00\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}