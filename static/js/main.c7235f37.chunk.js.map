{"version":3,"sources":["components/About.tsx","components/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LinkButton","styled","Button","theme","color","backgroundColor","textTransform","fontSize","About","name","email","description","photoPath","linkedIn","github","googleScholar","cv","Grid","container","spacing","item","direction","xs","alignItems","Box","fontWeight","style","marginTop","Typography","whiteSpace","component","startIcon","className","onClick","window","open","marginLeft","useStyles","makeStyles","teaserImg","position","backgroundPosition","figure","height","width","margin","padding","overflow","fnAuthors","authors","replace","ProjectItem","id","title","source","path","teaser","award","classes","backgroundImage","backgroundRepeat","maxHeight","dangerouslySetInnerHTML","__html","fontStyle","Chip","size","label","icon","Projects","props","projects","map","project","i","App","useState","data","setData","fetchData","a","fetch","resp","json","useEffect","Container","maxWidth","about","variant","align","updated","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"iSA+BMA,EAAaC,YAAOC,IAAPD,EAAe,cAAGE,MAAH,MAAgB,CAChDC,MAAO,UACP,UAAW,CACTC,gBAAiB,WAEnBC,cAAe,OACfC,SAAU,WAuFGC,EApFqB,SAAC,GAS/B,EARJC,KAQK,IAPLC,EAOI,EAPJA,MAEAC,GAKI,EANJC,UAMI,EALJD,aACAE,EAII,EAJJA,SACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,cACAC,EACI,EADJA,GAIA,OACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,UAAU,MAAMF,QAAS,EAA9C,SAaE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAACC,WAAW,OAAzB,UACE,cAACC,EAAA,EAAD,CACEC,WAAW,iBACXlB,SAAS,cACTmB,MAAO,CAAEC,UAAW,OAHtB,yBAQA,cAACC,EAAA,EAAD,CAAYF,MAAO,CAAEG,WAAY,WAAYF,UAAW,QAAxD,SACGhB,IAEH,eAACa,EAAA,EAAD,CAAKG,UAAW,EAAhB,UACE,cAACH,EAAA,EAAD,CAAKM,UAAU,OAAf,SACE,cAAC9B,EAAD,CAAY+B,UAAW,mBAAGC,UAAU,oBAApC,SACGtB,MAGL,cAACc,EAAA,EAAD,CAAKM,UAAU,OAAf,SACE,cAAC9B,EAAD,CACEiC,QAAS,kBAAMC,OAAOC,KAAKnB,EAAI,WAC/Be,UAAW,mBAAGC,UAAU,oBAF1B,kBAOF,cAACR,EAAA,EAAD,CAAKM,UAAU,OAAOM,WAAY,EAAlC,SACE,cAACpC,EAAD,CACEiC,QAAS,kBAAMC,OAAOC,KAAKtB,EAAU,WACrCkB,UAAW,mBAAGC,UAAU,oBAF1B,wBAOF,cAACR,EAAA,EAAD,CAAKM,UAAU,OAAOM,WAAY,EAAlC,SACE,cAACpC,EAAD,CACEiC,QAAS,kBAAMC,OAAOC,KAAKrB,EAAQ,WACnCiB,UAAW,mBAAGC,UAAU,kBAF1B,sBAOF,cAACR,EAAA,EAAD,CAAKM,UAAU,OAAOM,WAAY,EAAlC,SACE,cAACpC,EAAD,CACEiC,QAAS,kBAAMC,OAAOC,KAAKpB,EAAe,WAC1CgB,UAAW,mBAAGC,UAAU,0BAF1B,kC,iBC1GRK,EAAYC,aAAW,SAACnC,GAAD,MAAY,CACvCoC,UAAW,CACTC,SAAU,WAEVC,mBAAoB,OAKpB,qBAAsB,SACtB,UAAW,CAETA,mBAAoB,UAGxBC,OAAQ,CACNF,SAAU,WACVG,OAAQ,OACRC,MAAO,OACPC,OAAQ,EACRC,QAAS,EACTC,SAAU,cAkBR/C,EAAaC,YAAOC,IAAPD,EAAe,cAAGE,MAAH,MAAgB,CAChDC,MAAO,UACP,UAAW,CACTC,gBAAiB,WAEnBC,cAAe,OACfC,SAAU,WAqBNyC,EAAY,SAACC,GAMjB,MAAO,wBALYA,EAAQC,QACzB,cACA,gCAG4C,UAG1CC,EAAsC,SAAC,GAQvC,EAPJC,GAOK,IANLC,EAMI,EANJA,MACAJ,EAKI,EALJA,QACAK,EAII,EAJJA,OAEAC,GAEI,EAHJC,OAGI,EAFJD,MACAE,EACI,EADJA,MAEMC,EAAUrB,IAEhB,OACE,eAACpB,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,UAAU,MAAMF,QAAS,EAA9C,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,WAAW,OAA7B,SACE,qBAAKS,UAAW0B,EAAQhB,OAAxB,SACE,qBAIEhB,MAAO,CAELiC,gBAAgB,4BAEhBC,iBAAkB,YAClBC,UAAW,SAEb7B,UAAW0B,EAAQnB,gBAKzB,eAACtB,EAAA,EAAD,CACEC,WAAS,EACTE,MAAI,EACJE,IAAE,EACFC,WAAW,OACXF,UAAU,SACVF,QAAS,GANX,UAQE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACE,EAAA,EAAD,CAAKC,WAAW,iBAAhB,SAAkC4B,MAGpC,cAACpC,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,qBAAKwC,wBAAyB,CAAEC,OAAQf,EAAUC,QAGpD,cAAChC,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACE,EAAA,EAAD,CAAKwC,UAAU,SAAf,SAAyBV,MAG1BG,GACC,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACE,EAAA,EAAD,UACE,cAACyC,EAAA,EAAD,CACEC,KAAK,QACL9D,MAAM,UACN+D,MAAOV,EACPW,KAAM,mBAAGpC,UAAU,iBACnBN,MAAO,CAAEtB,MAAO,QAASqB,WAAY,cAM7C,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAAC,EAAD,CACE4C,KAAK,QACLjC,QAAS,kBAAMC,OAAOC,KAAKoB,EAAM,WACjCxB,UAAW,mBAAGC,UAAU,oBAH1B,4BAcKqC,EA3G2B,SAACC,GACzC,OACE,eAACrD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACI,EAAA,EAAD,CAAKC,WAAW,iBAAiBlB,SAAS,cAA1C,4BAIF,cAACU,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACC,QAAS,EAA9B,SACGmD,EAAMC,UACLD,EAAMC,SAASC,KAAI,SAACC,EAASC,GAAV,OACjB,cAAC,EAAD,eAAkCD,GAAhBA,EAAQrB,a,SCpBvBuB,EAhCH,WACV,MAAwBC,mBAAqB,IAA7C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,oBADT,cACVC,EADU,gBAEGA,EAAKC,OAFR,OAEVN,EAFU,OAGhBC,EAAQD,GAHQ,2CAAH,qDAUf,OAJAO,qBAAU,WACRL,MACC,IAGD,cAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGE,UAAU,SAASM,UAAW,EAA1D,UACE,cAACV,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAAC,EAAD,eAAWuD,EAAKU,UAElB,cAACtE,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAAC,EAAD,CAAUiD,SAAUM,EAAKN,aAE3B,cAACtD,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,eAACM,EAAA,EAAD,CAAY4D,QAAQ,QAAQC,MAAM,SAAlC,8CACiCZ,EAAKa,mBCrBjCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCFRzF,EAAQiG,YAAY,CAExBC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAexG,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJyG,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.c7235f37.chunk.js","sourcesContent":["import React from \"react\";\n// import css from '../index.css';\nimport { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { styled } from \"@mui/styles\";\n\n// const useStyles = makeStyles((theme) => ({\n//   circularPortrait: {\n//     position: \"relative\",\n//     width: \"20vw\",\n//     height: \"20vw\",\n//     overflow: \"hidden\",\n//     borderRadius: \"50%\",\n//   },\n//   circularPortraitImg: {\n//     width: \"100%\",\n//     height: \"100%\",\n//     objectFit: \"cover\",\n//   },\n// }));\n\ntype AboutProps = {\n  email: string;\n  name: string;\n  photoPath: string;\n  description: string;\n  linkedIn: string;\n  github: string;\n  googleScholar: string;\n  cv: string;\n};\n\nconst LinkButton = styled(Button)(({ theme }) => ({\n  color: \"#808080\",\n  \"&:hover\": {\n    backgroundColor: \"#fed8b1\",\n  },\n  textTransform: \"none\",\n  fontSize: \"15px\",\n}));\n\nconst About: React.FC<AboutProps> = ({\n  name,\n  email,\n  photoPath,\n  description,\n  linkedIn,\n  github,\n  googleScholar,\n  cv,\n}) => {\n  // const classes = useStyles();\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item container direction=\"row\" spacing={5}>\n        {/* <Grid item xs={3} style={{ maxWidth: \"20vw\", maxHeight: \"20vw\" }}>\n          <div\n            className={classes.circularPortrait}\n            style={{ marginTop: \"20px\" }}\n          >\n            <img\n              alt=\"profile-img\"\n              src={photoPath}\n              className={classes.circularPortraitImg}\n            />\n          </div>\n        </Grid> */}\n        <Grid item xs alignItems=\"left\">\n          <Box\n            fontWeight=\"fontWeightBold\"\n            fontSize=\"h4.fontSize\"\n            style={{ marginTop: \"5px\" }}\n          >\n            Jinhan Choi\n          </Box>\n\n          <Typography style={{ whiteSpace: \"pre-line\", marginTop: \"15px\" }}>\n            {description}\n          </Typography>\n          <Box marginTop={3}>\n            <Box component=\"span\">\n              <LinkButton startIcon={<i className=\"fas fa-envelope\"></i>}>\n                {email}\n              </LinkButton>\n            </Box>\n            <Box component=\"span\">\n              <LinkButton\n                onClick={() => window.open(cv, \"_blank\")}\n                startIcon={<i className=\"fas fa-file-alt\"></i>}\n              >\n                CV\n              </LinkButton>\n            </Box>\n            <Box component=\"span\" marginLeft={2}>\n              <LinkButton\n                onClick={() => window.open(linkedIn, \"_blank\")}\n                startIcon={<i className=\"fab fa-linkedin\"></i>}\n              >\n                LinkedIn\n              </LinkButton>\n            </Box>\n            <Box component=\"span\" marginLeft={2}>\n              <LinkButton\n                onClick={() => window.open(github, \"_blank\")}\n                startIcon={<i className=\"fab fa-github\"></i>}\n              >\n                Github\n              </LinkButton>\n            </Box>\n            <Box component=\"span\" marginLeft={2}>\n              <LinkButton\n                onClick={() => window.open(googleScholar, \"_blank\")}\n                startIcon={<i className=\"fas fa-graduation-cap\"></i>}\n              >\n                Scholar\n              </LinkButton>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Grid, Box, Button, Chip } from \"@mui/material\";\nimport { makeStyles, styled } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  teaserImg: {\n    position: \"absolute\",\n    // left: \"0\",\n    backgroundPosition: \"left\",\n    // \"-webkit-transform\": \"scale(1)\",\n    // transform: \"scale(1)\",\n    // \"-webkit-transition\": \".5s ease-in-out\",\n    // transition: \".5s ease-in-out\",\n    \"-webkit-transition\": \"all 2s\",\n    \"&:hover\": {\n      // left: \"-50vw\",\n      backgroundPosition: \"right\",\n    },\n  },\n  figure: {\n    position: \"relative\",\n    height: \"100%\",\n    width: \"auto\",\n    margin: 0,\n    padding: 0,\n    overflow: \"hidden\",\n  },\n}));\n\ntype IProjectItem = {\n  id: string;\n  title: string;\n  authors: string;\n  source: string;\n  teaser: string;\n  path: string;\n  award: string;\n};\n\ntype ProjectsProps = {\n  projects: Array<IProjectItem>;\n};\n\nconst LinkButton = styled(Button)(({ theme }) => ({\n  color: \"#808080\",\n  \"&:hover\": {\n    backgroundColor: \"#fed8b1\",\n  },\n  textTransform: \"none\",\n  fontSize: \"15px\",\n}));\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item>\n        <Box fontWeight=\"fontWeightBold\" fontSize=\"h5.fontSize\">\n          Publications\n        </Box>\n      </Grid>\n      <Grid item container spacing={3}>\n        {props.projects &&\n          props.projects.map((project, i) => (\n            <ProjectItem key={project.id} {...project} />\n          ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst fnAuthors = (authors: string) => {\n  const newAuthors = authors.replace(\n    \"Jinhan Choi\",\n    \"<strong>Jinhan Choi</strong>\"\n  );\n\n  return '<Box component=\"div\">' + newAuthors + \"</Box>\";\n};\n\nconst ProjectItem: React.FC<IProjectItem> = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  path,\n  award,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item container direction=\"row\" spacing={3}>\n      <Grid item xs={2} alignItems=\"left\">\n        <div className={classes.figure}>\n          <div\n            // alt=\"publication-teaser\"\n            // src={teaser}\n            // width=\"100%\"\n            style={{\n              // backgroundImage: `url($(process.env.PUBLIC_URL + teaser))`,\n              backgroundImage: `url($(\"../..\" + teaser)})`,\n              // backgroundImage: `url($(teaser)})`,\n              backgroundRepeat: \"no-repeat\",\n              maxHeight: \"110px\",\n            }}\n            className={classes.teaserImg}\n          ></div>\n        </div>\n      </Grid>\n\n      <Grid\n        container\n        item\n        xs\n        alignItems=\"left\"\n        direction=\"column\"\n        spacing={0.5}\n      >\n        <Grid item xs>\n          <Box fontWeight=\"fontWeightBold\">{title}</Box>\n        </Grid>\n\n        <Grid item xs>\n          <div dangerouslySetInnerHTML={{ __html: fnAuthors(authors) }} />\n        </Grid>\n\n        <Grid item xs>\n          <Box fontStyle=\"italic\">{source}</Box>\n        </Grid>\n\n        {award && (\n          <Grid item xs>\n            <Box>\n              <Chip\n                size=\"small\"\n                color=\"primary\"\n                label={award}\n                icon={<i className=\"fas fa-award\"></i>}\n                style={{ color: \"white\", fontWeight: \"bold\" }}\n              />\n            </Box>\n          </Grid>\n        )}\n\n        <Grid item xs>\n          <LinkButton\n            size=\"small\"\n            onClick={() => window.open(path, \"_blank\")}\n            startIcon={<i className=\"fas fa-file-alt\"></i>}\n          >\n            Paper\n          </LinkButton>\n          {/* <a rel=\"noopener noreferrer\" target=\"_blank\" href={path}><i className=\"fas fa-file-alt\"></i> paper</a> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Projects;\n","import React, { useState, useEffect } from \"react\";\n// import './App.css';\nimport About from \"src/components/About\";\nimport Projects from \"src/components/Projects\";\n\nimport { Container, Grid, Typography } from \"@mui/material\";\n\ninterface DataObject {\n  [key: string]: any;\n}\n\nconst App = () => {\n  const [data, setData] = useState<DataObject>({});\n\n  const fetchData = async () => {\n    const resp = await fetch(\"assets/data.json\");\n    const data = await resp.json();\n    setData(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container spacing={5} direction=\"column\" marginTop={1}>\n        <Grid item xs>\n          <About {...data.about} />\n        </Grid>\n        <Grid item xs>\n          <Projects projects={data.projects} />\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"body1\" align=\"center\">\n            © Jinhan Choi | Last Updated: {data.updated}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  //https://material-ui.com/customization/palette/\n  palette: {\n    primary: {\n      main: \"#FF8C00\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}