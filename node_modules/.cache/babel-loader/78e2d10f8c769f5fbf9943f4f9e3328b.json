{"ast":null,"code":"var _jsxFileName = \"/Users/jinhan/Dev/jh/src/components/Projects.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Publications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projects.map(project => ProjectItem(project))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}; // const materials = (d) => d.materials.map((m) => \n//     <span>\n//         <a href={m.path} target=\"_blank\"><i class=\"fas fa-file-alt\"></i> {m.label}</a>\n//     </span>\n// );\n\n\n_c = Projects;\n\nconst ProjectItem = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  materials\n}) => {\n  // let projects = Object.values(items);\n  // projects = projects.slice();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-authors\",\n      children: [authors, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-source\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: teaser,\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ProjectItem;\nexport default Projects; // export function handleProjectFilter(data){\n//     let conds = document.querySelectorAll('.filter input[name=\"filter\"]');\n//     // console.log(typeof conds);\n//     conds.forEach(cond => cond.addEventListener('change', function(event){\n//         let checked = event.target.value;\n//         if (checked === 'all'){\n//             document.querySelector('.project-list').innerHTML = ProjectItems(data.projects);\n//         } else{\n//             let filtered = data.projects.filter(d => {\n//                 return d.tags.some(tag => checked === tag.toLowerCase());\n//             });\n//             document.querySelector('.project-list').innerHTML = ProjectItems(filtered);\n//         }\n//     }));\n// }\n\n{\n  /* <div class=\"project-tags\">\n  ${d.tags.map(tag=>`\n     <span class=\"tag ${tag.toLowerCase()}\">\n         ${tag}\n     </span>\n  `).join('')}\n  </div> */\n\n  /* <div class=\"project-materials\">\n  ${d.materials.map(m=>`\n      <span>\n          <a href=\"${m.path}\" target=\"_blank\">${MaterialIcon(m.label)} \n          ${m.label}\n          </a>\n      </span>\n  `).join('')}\n  </div> */\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"ProjectItem\");","map":{"version":3,"sources":["/Users/jinhan/Dev/jh/src/components/Projects.tsx"],"names":["React","Projects","props","console","log","projects","map","project","ProjectItem","id","title","authors","source","teaser","materials"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;;;AAgBA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAS,IAAA,EAAE,EAAE,UAAb;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,gBACKG,QAAQ,CAACC,GAAT,CAAcC,OAAD,IACVC,WAAW,CAACD,OAAD,CADd;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZD,C,CAcA;AACA;AACA;AACA;AACA;;;KAlBMN,Q;;AAoBN,MAAMO,WAAmC,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,MAA7B;AAAqCC,EAAAA;AAArC,CAAD,KAAqD;AAC7F;AACA;AACA,sBACI;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,4BAIY;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YAJZ,eAUY;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA,iBACKC,OADL,eACa;AAAA;AAAA;AAAA;AAAA,cADb;AAAA;AAAA;AAAA;AAAA;AAAA,YAVZ,eAaY;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,6BACI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbZ,eAuBY;AAAK,MAAA,GAAG,EAAEC,MAAV;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAjCD;;MAAML,W;AAmCN,eAAeP,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAU","sourcesContent":["import React, { useContext } from 'react';\n\ntype IProjectItem = {\n    id: string,\n    title: string,\n    authors: string,\n    source: string,\n    teaser: string,\n    materials: [],\n}\n\n\ntype ProjectsProps = {\n    projects: Array<IProjectItem>\n}\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n    console.log(props)\n    return (\n        <section id={\"projects\"}>\n            <h1 className={\"title\"}>Publications</h1>\n            <div className={\"project-list\"}>\n                {projects.map((project) => (\n                    ProjectItem(project)\n                ))}\n            </div>\n        </section>\n    );\n}\n\n// const materials = (d) => d.materials.map((m) => \n//     <span>\n//         <a href={m.path} target=\"_blank\"><i class=\"fas fa-file-alt\"></i> {m.label}</a>\n//     </span>\n// );\n\nconst ProjectItem: React.FC<IProjectItem> = ({id, title, authors, source, teaser, materials}) => {\n    // let projects = Object.values(items);\n    // projects = projects.slice();\n    return (\n        <div className={\"row\"}>\n            {/* <Grid container>\n                <Grid item xs={6}> */}\n                {/* <div className={\"col-6\"}> */}\n                    <div className={\"project-title\"}>\n                        {title}\n                        {/* <Link to={`/project/${d.id}`}><strong>{d.title}</strong></Link> */}\n                        {/* <Link><strong>{d.title}</strong></Link> */}\n                        {/* <strong>{d.title}</strong> */}\n                    </div>\n                    <div className={\"project-authors\"}>\n                        {authors}<br/>\n                    </div>\n                    <div className={\"project-source\"}>\n                        <em>{source}</em>\n                    </div>\n                    {/* <div class=\"project-materials\">\n                        {materials(d)}\n                    </div> */}\n                {/* </div>  */}\n                {/* </Grid> */}\n            {/* <div className={\"col-6\"}> */}\n                {/* // <Grid item xs={6}> */}\n                    <img src={teaser} width=\"100%\"/>\n                {/* </Grid> */}\n            {/* </div> */}\n            {/* </Grid> */}\n        </div>\n    );\n}\n\nexport default Projects;\n// export function handleProjectFilter(data){\n//     let conds = document.querySelectorAll('.filter input[name=\"filter\"]');\n//     // console.log(typeof conds);\n//     conds.forEach(cond => cond.addEventListener('change', function(event){\n//         let checked = event.target.value;\n//         if (checked === 'all'){\n//             document.querySelector('.project-list').innerHTML = ProjectItems(data.projects);\n//         } else{\n//             let filtered = data.projects.filter(d => {\n//                 return d.tags.some(tag => checked === tag.toLowerCase());\n//             });\n//             document.querySelector('.project-list').innerHTML = ProjectItems(filtered);\n//         }\n//     }));\n// }\n\n\n{/* <div class=\"project-tags\">\n${d.tags.map(tag=>`\n    <span class=\"tag ${tag.toLowerCase()}\">\n        ${tag}\n    </span>\n`).join('')}\n</div> */\n/* <div class=\"project-materials\">\n${d.materials.map(m=>`\n    <span>\n        <a href=\"${m.path}\" target=\"_blank\">${MaterialIcon(m.label)} \n        ${m.label}\n        </a>\n    </span>\n`).join('')}\n</div> */}"]},"metadata":{},"sourceType":"module"}