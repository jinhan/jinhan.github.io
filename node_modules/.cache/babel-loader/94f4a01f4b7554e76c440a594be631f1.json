{"ast":null,"code":"var _jsxFileName = \"/Users/jinhan/Dev/jh/src/components/News.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, TextField, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  //   const newsSearchRef = useRef();\n  const [newsItems, setNewsItems] = useState(props.news); // const [filteredNewsItems, setFilteredNewsItems] = useState(props.news.slice(0, 5));\n  //   function handleNewsFilter() {\n  //     // const data = props.news;\n  //     newsSearchRef.current.addEventListener('input', function (event) {\n  //       // console.log('value', this.value);\n  //       if (this.value !== '') {\n  //         const filtered = newsItems.filter((d) => {\n  //           const text = d.title + ' ' + d.date;\n  //           return text.toLowerCase().includes(this.value.toLowerCase());\n  //         });\n  //         setNewsItems(filtered.slice(0, 5));\n  //         // NewsItem(newsItems);\n  //       } else {\n  //         setNewsItems(newsItems.slice(0, 5));\n  //         // NewsItem();\n  //       }\n  //     });\n  //   }\n  //   useEffect(() => {\n  //     if (newsItems) {\n  //       handleNewsFilter();\n  //     }\n  //   }, [newsItems]);\n\n  const handleSearchNewsInput = event => {\n    const searchQueryText = event.target.value;\n\n    if (searchQueryText !== '') {\n      const filtered = newsItems.filter(d => {\n        const text = d.title + ' ' + d.date;\n        return text.toLowerCase().includes(searchQueryText.toLowerCase());\n      });\n      setNewsItems(filtered.slice(0, 5)); // NewsItem(newsItems);\n    } else {\n      setNewsItems(newsItems.slice(0, 5)); // NewsItem();\n    }\n  }; // console.log(props);\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"left\",\n        children: \"News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        placeholder: \"Search News...\",\n        onChange: handleSearchNewsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 3,\n      children: newsItems && newsItems.map(news => NewsItem(news))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(News, \"7UX2sZZes8U3qxhMcFWbNT1WXhE=\");\n\n_c = News;\n\nconst NewsItem = ({\n  title,\n  date\n}) => {\n  // let news = newsItems;\n  // news = news.slice(0,5);\n  // // console.log(news);\n  // return news.map(d => (\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 8,\n      align: \"left\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      align: \"right\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = NewsItem;\nexport default News;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"News\");\n$RefreshReg$(_c2, \"NewsItem\");","map":{"version":3,"sources":["/Users/jinhan/Dev/jh/src/components/News.tsx"],"names":["React","useState","Grid","TextField","Typography","News","props","newsItems","setNewsItems","news","handleSearchNewsInput","event","searchQueryText","target","value","filtered","filter","d","text","title","date","toLowerCase","includes","slice","map","NewsItem"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Grid, TextField, Typography } from '@mui/material';\n\ntype INewsItem = {\n  title: string;\n  date: string;\n};\n\ntype NewsProps = {\n  news: Array<INewsItem>;\n};\n\nconst News: React.FC<NewsProps> = (props) => {\n  //   const newsSearchRef = useRef();\n  const [newsItems, setNewsItems] = useState(props.news);\n  // const [filteredNewsItems, setFilteredNewsItems] = useState(props.news.slice(0, 5));\n\n  //   function handleNewsFilter() {\n  //     // const data = props.news;\n  //     newsSearchRef.current.addEventListener('input', function (event) {\n  //       // console.log('value', this.value);\n  //       if (this.value !== '') {\n  //         const filtered = newsItems.filter((d) => {\n  //           const text = d.title + ' ' + d.date;\n  //           return text.toLowerCase().includes(this.value.toLowerCase());\n  //         });\n  //         setNewsItems(filtered.slice(0, 5));\n  //         // NewsItem(newsItems);\n  //       } else {\n  //         setNewsItems(newsItems.slice(0, 5));\n  //         // NewsItem();\n  //       }\n  //     });\n  //   }\n\n  //   useEffect(() => {\n  //     if (newsItems) {\n  //       handleNewsFilter();\n  //     }\n  //   }, [newsItems]);\n\n  const handleSearchNewsInput = (event) => {\n    const searchQueryText = event.target.value;\n    if (searchQueryText !== '') {\n      const filtered = newsItems.filter((d) => {\n        const text = d.title + ' ' + d.date;\n        return text.toLowerCase().includes(searchQueryText.toLowerCase());\n      });\n      setNewsItems(filtered.slice(0, 5));\n      // NewsItem(newsItems);\n    } else {\n      setNewsItems(newsItems.slice(0, 5));\n      // NewsItem();\n    }\n  };\n\n  // console.log(props);\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item xs>\n        <Typography variant=\"h4\" align=\"left\">\n          News\n        </Typography>\n      </Grid>\n      <Grid item xs>\n        <TextField\n          variant=\"outlined\"\n          placeholder=\"Search News...\"\n          onChange={handleSearchNewsInput}\n        />\n      </Grid>\n      <Grid item container spacing={3}>\n        {newsItems && newsItems.map((news) => NewsItem(news))}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst NewsItem: React.FC<INewsItem> = ({ title, date }) => {\n  // let news = newsItems;\n  // news = news.slice(0,5);\n  // // console.log(news);\n  // return news.map(d => (\n  return (\n    <Grid item container>\n      <Grid item xs={8} align=\"left\">\n        {title}\n      </Grid>\n      <Grid item xs={4} align=\"right\">\n        {date}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default News;\n"]},"metadata":{},"sourceType":"module"}