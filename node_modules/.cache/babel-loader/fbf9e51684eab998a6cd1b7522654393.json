{"ast":null,"code":"var _jsxFileName = \"/Users/jinhan/Dev/jh/src/components/Projects.tsx\";\nimport React from 'react';\nimport { Grid, Box, Typography, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    marginLeft: 2,\n    marginRight: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        fontSize: \"h5.fontSize\",\n        children: \"Publications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 3,\n      children: props.projects && props.projects.map(project => ProjectItem(project))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Projects;\n\nconst fnAuthors = authors => {\n  const newAuthors = authors.replace('Jinhan Choi', '<strong>Jinhan Choi</strong>');\n  return '<Box component=\"div\">' + newAuthors + '</Box>';\n};\n\nconst ProjectItem = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  path,\n  award\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: teaser,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      align: \"left\",\n      direction: \"column\",\n      spacing: 0.5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          fontWeight: \"fontWeightBold\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fnAuthors(authors)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          fontStyle: \"italic\",\n          children: source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), award && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            color: \"primary\",\n            label: award,\n            style: {\n              color: 'white',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: path,\n            target: \"_blank\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-file-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"button\",\n              children: \" paper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ProjectItem;\nexport default Projects;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"ProjectItem\");","map":{"version":3,"sources":["/Users/jinhan/Dev/jh/src/components/Projects.tsx"],"names":["React","Grid","Box","Typography","Chip","Projects","props","projects","map","project","ProjectItem","fnAuthors","authors","newAuthors","replace","id","title","source","teaser","path","award","__html","color","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Box, Typography, Chip } from '@mui/material';\n\ntype IProjectItem = {\n  id: string;\n  title: string;\n  authors: string;\n  source: string;\n  teaser: string;\n  path: string;\n  award: string;\n};\n\ntype ProjectsProps = {\n  projects: Array<IProjectItem>;\n};\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n  return (\n    <Grid container spacing={3} marginLeft={2} marginRight={2}>\n      <Grid item>\n        <Box fontWeight=\"fontWeightBold\" fontSize=\"h5.fontSize\">\n          Publications\n        </Box>\n      </Grid>\n      <Grid item container spacing={3}>\n        {props.projects && props.projects.map((project) => ProjectItem(project))}\n      </Grid>\n    </Grid>\n  );\n};\n\n\nconst fnAuthors = (authors: string) => {\n  const newAuthors = authors.replace('Jinhan Choi', '<strong>Jinhan Choi</strong>');\n\n  return '<Box component=\"div\">' + newAuthors + '</Box>';\n};\n\nconst ProjectItem: React.FC<IProjectItem> = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  path,\n  award,\n}) => {\n  return (\n    <Grid item container direction=\"row\" spacing={3} key={id}>\n      <Grid item xs={2}>\n        <img src={teaser} width=\"100%\" />\n      </Grid>\n\n      <Grid item xs container align=\"left\" direction=\"column\" spacing={0.5}>\n        <Grid item xs>\n          <Box fontWeight=\"fontWeightBold\">{title}</Box>\n        </Grid>\n        {/* {fnAuthors(authors)} */}\n        <Grid item xs>\n          <div dangerouslySetInnerHTML={{ __html: fnAuthors(authors) }} />\n          {/* {fnAuthors(authors)} */}\n        </Grid>\n        <Grid item xs>\n          <Box fontStyle=\"italic\">{source}</Box>\n        </Grid>\n\n        {award && (\n          <Grid item xs>\n            <Box>\n              <Chip\n                size=\"small\"\n                color=\"primary\"\n                label={award}\n                style={{ color: 'white', fontWeight: 'bold' }}\n              />\n            </Box>\n          </Grid>\n        )}\n\n        <Grid item xs>\n          <Box>\n            <a href={path} target=\"_blank\">\n              <i className=\"fas fa-file-alt\"></i>\n              <Typography variant=\"button\"> paper</Typography>\n            </a>\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}