{"ast":null,"code":"var _jsxFileName = \"/Users/jinhan/Dev/jh/src/components/Projects.tsx\";\nimport React from 'react';\nimport { Grid, Box, Typography, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        children: \"Publications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 3,\n      children: props.projects && props.projects.map(project => ProjectItem(project))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Projects;\n\nconst fnMaterials = materials => materials.map(m => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: /*#__PURE__*/_jsxDEV(\"a\", {\n    href: m.path,\n    target: \"_blank\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fas fa-file-alt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \" \", m.label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 5\n}, this));\n\nconst fnAuthors = authors => authors;\n\nconst ProjectItem = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  materials,\n  award\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: teaser,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      align: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: fnAuthors(authors)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontStyle: \"italic\",\n        children: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), award && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          size: \"small\",\n          color: \"primary\",\n          label: award\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: fnMaterials(materials)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ProjectItem;\nexport default Projects;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"ProjectItem\");","map":{"version":3,"sources":["/Users/jinhan/Dev/jh/src/components/Projects.tsx"],"names":["React","Grid","Box","Typography","Chip","Projects","props","projects","map","project","ProjectItem","fnMaterials","materials","m","path","label","fnAuthors","authors","id","title","source","teaser","award"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Box, Typography, Chip } from '@mui/material';\n\ntype IProjectItem = {\n  id: string;\n  title: string;\n  authors: string;\n  source: string;\n  teaser: string;\n  materials: [];\n  award: string;\n};\n\ntype ProjectsProps = {\n  projects: Array<IProjectItem>;\n};\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"left\">\n          Publications\n        </Typography>\n      </Grid>\n      <Grid item container spacing={3}>\n        {props.projects && props.projects.map((project) => ProjectItem(project))}\n      </Grid>\n    </Grid>\n  );\n};\n\ntype MaterialsType = {\n  label: string;\n  path: string;\n};\nconst fnMaterials = (materials: MaterialsType) =>\n  materials.map((m) => (\n    <span>\n      <a href={m.path} target=\"_blank\">\n        <i class=\"fas fa-file-alt\"></i> {m.label}\n      </a>\n    </span>\n  ));\n\nconst fnAuthors = (authors: string) => authors\n\nconst ProjectItem: React.FC<IProjectItem> = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  materials,\n  award,\n}) => {\n  return (\n    <Grid item container direction=\"row\" spacing={3}>\n      <Grid item xs={2}>\n        <img src={teaser} width=\"100%\" />\n      </Grid>\n\n      <Grid item xs container align=\"left\">\n        <Box fontWeight=\"fontWeightBold\">{title}</Box>\n        <Box>{fnAuthors(authors)}</Box>\n        <Box fontStyle=\"italic\">{source}</Box>\n        {award && (\n          <Box>\n            <Chip size=\"small\" color=\"primary\" label={award} />\n          </Box>\n        )}\n        <Box>{fnMaterials(materials)}</Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}