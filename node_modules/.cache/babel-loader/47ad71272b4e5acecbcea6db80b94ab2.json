{"ast":null,"code":"var _jsxFileName = \"/Users/jinhan/Dev/jh/src/components/Projects.tsx\";\nimport React from 'react';\nimport Grid from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Publications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: props.projects && props.projects.map(project => ProjectItem(project))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}; // const fnMaterials = (materials: []) => materials.map((m) => \n//     <span>\n//         <a href={m.path} target=\"_blank\"><i class=\"fas fa-file-alt\"></i> {m.label}</a>\n//     </span>\n// );\n\n\n_c = Projects;\n\nconst ProjectItem = ({\n  id,\n  title,\n  authors,\n  source,\n  teaser,\n  materials\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: teaser,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: authors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ProjectItem;\nexport default Projects; // export function handleProjectFilter(data){\n//     let conds = document.querySelectorAll('.filter input[name=\"filter\"]');\n//     // console.log(typeof conds);\n//     conds.forEach(cond => cond.addEventListener('change', function(event){\n//         let checked = event.target.value;\n//         if (checked === 'all'){\n//             document.querySelector('.project-list').innerHTML = ProjectItems(data.projects);\n//         } else{\n//             let filtered = data.projects.filter(d => {\n//                 return d.tags.some(tag => checked === tag.toLowerCase());\n//             });\n//             document.querySelector('.project-list').innerHTML = ProjectItems(filtered);\n//         }\n//     }));\n// }\n\n{\n  /* <div class=\"project-tags\">\n  ${d.tags.map(tag=>`\n     <span class=\"tag ${tag.toLowerCase()}\">\n         ${tag}\n     </span>\n  `).join('')}\n  </div> */\n\n  /* <div class=\"project-materials\">\n  ${d.materials.map(m=>`\n      <span>\n          <a href=\"${m.path}\" target=\"_blank\">${MaterialIcon(m.label)} \n          ${m.label}\n          </a>\n      </span>\n  `).join('')}\n  </div> */\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"ProjectItem\");","map":{"version":3,"sources":["/Users/jinhan/Dev/jh/src/components/Projects.tsx"],"names":["React","Grid","Projects","props","console","log","projects","map","project","ProjectItem","id","title","authors","source","teaser","materials"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAkBA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAS,IAAA,EAAE,EAAE,UAAb;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,gBACKA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAClCC,WAAW,CAACD,OAAD,CADI;AADvB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZD,C,CAcA;AACA;AACA;AACA;AACA;;;KAlBMN,Q;;AAoBN,MAAMO,WAAmC,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,MAA7B;AAAqCC,EAAAA;AAArC,CAAD,KAAqD;AAC7F,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAED,MAAV;AAAkB,QAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,UAAU,EAAC,gBAAhB;AAAA,kBACKH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,GAAD;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;MAAMJ,W;AAsBN,eAAeP,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAU","sourcesContent":["import React, { useContext } from 'react';\nimport Grid from '@mui/material';\n\n\n\ntype IProjectItem = {\n    id: string,\n    title: string,\n    authors: string,\n    source: string,\n    teaser: string,\n    materials: [],\n}\n\n\ntype ProjectsProps = {\n    projects: Array<IProjectItem>\n}\n\nconst Projects: React.FC<ProjectsProps> = (props) => {\n    console.log(props)\n    return (\n        <section id={\"projects\"}>\n            <h1 className={\"title\"}>Publications</h1>\n            <div className={\"project-list\"}>\n                {props.projects && props.projects.map((project) => (\n                    ProjectItem(project)\n                ))}\n            </div>\n        </section>\n    );\n}\n\n// const fnMaterials = (materials: []) => materials.map((m) => \n//     <span>\n//         <a href={m.path} target=\"_blank\"><i class=\"fas fa-file-alt\"></i> {m.label}</a>\n//     </span>\n// );\n\nconst ProjectItem: React.FC<IProjectItem> = ({id, title, authors, source, teaser, materials}) => {\n    return (\n        <Grid container direction=\"column\">\n            <Grid item xs={3}>\n                <img src={teaser} width=\"100%\"/>\n            </Grid>\n\n            <Grid item xs>\n                <Box fontWeight=\"fontWeightBold\">\n                    {title}\n                </Box>\n                <Box>\n                    {authors}\n                </Box>\n                <Box>\n                    {source}\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Projects;\n// export function handleProjectFilter(data){\n//     let conds = document.querySelectorAll('.filter input[name=\"filter\"]');\n//     // console.log(typeof conds);\n//     conds.forEach(cond => cond.addEventListener('change', function(event){\n//         let checked = event.target.value;\n//         if (checked === 'all'){\n//             document.querySelector('.project-list').innerHTML = ProjectItems(data.projects);\n//         } else{\n//             let filtered = data.projects.filter(d => {\n//                 return d.tags.some(tag => checked === tag.toLowerCase());\n//             });\n//             document.querySelector('.project-list').innerHTML = ProjectItems(filtered);\n//         }\n//     }));\n// }\n\n\n{/* <div class=\"project-tags\">\n${d.tags.map(tag=>`\n    <span class=\"tag ${tag.toLowerCase()}\">\n        ${tag}\n    </span>\n`).join('')}\n</div> */\n/* <div class=\"project-materials\">\n${d.materials.map(m=>`\n    <span>\n        <a href=\"${m.path}\" target=\"_blank\">${MaterialIcon(m.label)} \n        ${m.label}\n        </a>\n    </span>\n`).join('')}\n</div> */}"]},"metadata":{},"sourceType":"module"}